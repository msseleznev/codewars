// .filter (i => i > 0) -создает новый массив,  перебрав и отфильтровав положительные элементы старого массива
// .map(i => a += i, a=0) - создает массив сумм накапливая 'a'  (пример [5, 5, 20].map(i => x += i, x=0) --- [5, 10 ,30])
// .reverse()[0]; - реверсируем плученный после .map массив и берем его первый элемент.


function positiveSum(arr) {
    let sum = arr.filter(i => i > 0).map(i => a += i, a=0).reverse()[0];
    if (sum == undefined) {   //избегаем undefined при пустом входящем массиве.
        return 0;
    } else {
        return sum;
    }

}


//другие варианты функции
function positiveSum(arr) {
    var total = 0;
    for (i = 0; i < arr.length; i++) {    // перебираем массив в дависимости от его длинны
        if (arr[i] > 0) {                   // если элемент массива больше нуля
            total += arr[i];                  // на каждом шаге цикла увиличиваем total на следующий элемент массива
        }
    }
    return total;                         }

//
//.reduce((a, c) => a + c, 0), 'a' - число с которым сейчас идет работа(аккумулятор),
// 'с' - каждай следующий элемент массива. на каждом шаге увиличивает новую 'a' на 'с',
// если суммировать нечего возрачает 0.
function positiveSum (arr) {
    return arr.filter(x => x>=0).reduce((a, c) => a + c, 0);
}


